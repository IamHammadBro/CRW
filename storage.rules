rules_version = '2';

// Firebase Storage Security Rules for CrowdWave
service firebase.storage {
  match /b/{bucket}/o {
    
    // Profile photos - users can only read/write their own photos
    match /profile_photos/{userId}_{timestamp}.jpg {
      allow read: if true; // Allow anyone to read profile photos (for public display)
      allow write: if request.auth != null && request.auth.uid == userId;
      allow delete: if request.auth != null && request.auth.uid == userId;
    }
    
    // Legacy profile photos without user ID (temporary compatibility)
    match /profile_photos/{timestamp}.jpg {
      allow read: if true;
      allow write: if request.auth != null;
      allow delete: if request.auth != null;
    }
    
    // Chat images - users can upload and read chat images
    match /chat_images/{userId}_{chatId}_{timestamp}.{ext} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
      allow delete: if request.auth != null && request.auth.uid == userId;
    }
    
    // Package images - users can upload package photos
    match /package_images/{userId}_{packageId}_{timestamp}.{ext} {
      allow read: if true; // Allow public reading of package images
      allow write: if request.auth != null && request.auth.uid == userId;
      allow delete: if request.auth != null && request.auth.uid == userId;
    }
    
    // KYC documents - strict access control
    match /kyc_documents/{userId}/{document} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
      allow delete: if request.auth != null && request.auth.uid == userId;
    }
    
    // Default rule - deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
